/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-05-07 03:47:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.dataAnalyze.monitorInfo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <title>实时监测数据</title>\r\n");
      out.write("    <link href=\"/static/scripts/plugins/jquery-ui/jquery-ui.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("    <link href=\"/static/scripts/bootstrap/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("    <link href=\"/static/scripts/plugins/jqgrid/jqgrid.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <link href=\"/static/styles/learun-ui.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            margin: 10px 10px 0 10px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"gridPanel\">\r\n");
      out.write("    <table id=\"gridTable\"></table>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"/static/scripts/jquery/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<script src=\"/static/scripts/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"/static/scripts/plugins/jqgrid/jqgrid.js\"></script>\r\n");
      out.write("<script src=\"/static/scripts/utils/learun-ui.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    $(function () {\r\n");
      out.write("        InitialPage();\r\n");
      out.write("        GetGrid();\r\n");
      out.write("        setInterval(function () {\r\n");
      out.write("            $(\"#gridTable\").trigger(\"reloadGrid\");\r\n");
      out.write("        }, 60000);\r\n");
      out.write("    });\r\n");
      out.write("    //初始化页面\r\n");
      out.write("    function InitialPage() {\r\n");
      out.write("        //resize重设(表格、树形)宽高\r\n");
      out.write("        $(window).resize(function (e) {\r\n");
      out.write("            window.setTimeout(function () {\r\n");
      out.write("                $('#gridTable').setGridWidth(($('.gridPanel').width()));\r\n");
      out.write("                $(\"#gridTable\").setGridHeight($(window).height() - 62);\r\n");
      out.write("            }, 200);\r\n");
      out.write("            e.stopPropagation();\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    function cancelAlarm(addresscode, m_name) {\r\n");
      out.write("        $.ConfirmAjax({\r\n");
      out.write("            msg: \"将取消【\" + m_name + \"】的告警信息,您确认吗？\",\r\n");
      out.write("            url: \"../../MonitorInfo/RealData/CancelAlarm\",\r\n");
      out.write("            param: { keyValue: addresscode },\r\n");
      out.write("            success: function (data) {\r\n");
      out.write("                $(\"#gridTable\").trigger(\"reloadGrid\");\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //加载表格\r\n");
      out.write("    function GetGrid() {\r\n");
      out.write("        var selectedRowIndex = 0;\r\n");
      out.write("        var $gridTable = $(\"#gridTable\");\r\n");
      out.write("        $gridTable.jqGrid({\r\n");
      out.write("            url: \"../../MonitorInfo/RealData/GetListJson\",\r\n");
      out.write("            datatype: \"json\",\r\n");
      out.write("            height: $(window).height() - 62,\r\n");
      out.write("            //autowidth: true,\r\n");
      out.write("            colModel: [\r\n");
      out.write("                { label: '主键', name: 'meterid', hidden: true },\r\n");
      out.write("                { label: '地址码', name: 'addresscode', hidden: true },\r\n");
      out.write("                {\r\n");
      out.write("                    label: \"告警\", name: \"warnstatus\", index: \"warnstatus\", width: 50, align: \"center\",\r\n");
      out.write("                    formatter: function (cellvalue, options, rowObject) {\r\n");
      out.write("                        if (cellvalue != \"\" && cellvalue != null) {\r\n");
      out.write("                            return '<span onclick=\"cancelAlarm(\\'' + rowObject.addresscode + '\\',\\'' + rowObject.m_name + '\\');\" class=\"label label-red-learun\" title=\"'\r\n");
      out.write("                                + cellvalue + '\">告警</span>';\r\n");
      out.write("                        }\r\n");
      out.write("                        else {\r\n");
      out.write("                            return \"\";\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                { label: '站点名称', name: 'm_name', index: 'm_name', width: 150, align: 'left' },\r\n");
      out.write("                { label: '管径大小', name: 'm_pipedn', index: 'm_pipedn', width: 120, align: 'left' },\r\n");
      out.write("                { label: '管线材质', name: 'm_material', index: 'm_material', width: 75, align: 'left' },\r\n");
      out.write("                { label: \"瞬时流量（m³/h）\", name: \"realvalue\", index: \"realvalue\", width: 130, align: \"right\", formatter: 'number', formatoptions: { thousandsSeparator: \"\", decimalPlaces: 2 } },\r\n");
      out.write("                { label: \"正向流量（m³）\", name: \"forvalue\", index: \"forvalue\", width: 125, align: \"right\", formatter: 'number', formatoptions: { thousandsSeparator: \"\", decimalPlaces: 2 } },\r\n");
      out.write("                { label: \"反向流量（m³）\", name: \"revvalue\", index: \"revvalue\", width: 125, align: \"right\", formatter: 'number', formatoptions: { thousandsSeparator: \"\", decimalPlaces: 2 } },\r\n");
      out.write("                { label: \"管道压力（MPa）\", name: \"pressvalue\", index: \"pressvalue\", width: 125, align: \"right\", formatter: 'number', formatoptions: { thousandsSeparator: \"\", decimalPlaces: 2 } },\r\n");
      out.write("                { label: \"电池电压（V）\", name: \"celval\", index: \"celval\", width: 105, align: \"right\", formatter: 'number', formatoptions: { thousandsSeparator: \"\", decimalPlaces: 2 } },\r\n");
      out.write("                { label: \"最后采集时间\", name: \"createtime\", index: \"createtime\", width: 140, align: \"right\", formatter: 'date', formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i' } },\r\n");
      out.write("                { label: '', name: '', index: '', width: 10, align: 'left' }\r\n");
      out.write("            ],\r\n");
      out.write("            rowNum: \"10000\",\r\n");
      out.write("            rownumbers: true,\r\n");
      out.write("            onSelectRow: function () {\r\n");
      out.write("                selectedRowIndex = $(\"#\" + this.id).getGridParam('selrow');\r\n");
      out.write("            },\r\n");
      out.write("            gridComplete: function () {\r\n");
      out.write("                $(\"#\" + this.id).setSelection(selectedRowIndex, false);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
